application {
  config {
      baseName shareazade
      applicationType monolith
      authenticationType jwt
      clientPackageManager npm
      clientTheme none
      devDatabaseType h2Disk
      dtoSuffix DTO
      enableGradleEnterprise false
      enableHibernateCache true
      enableSwaggerCodegen false
      enableTranslation true
      gradleEnterpriseHost ""
      jhiPrefix jhi
      jhipsterVersion "7.9.3"
      languages [en, it, fr, de]
      messageBroker false
      nativeLanguage en
      otherModules []
      packageName org.pierre.shareazade
      prodDatabaseType postgresql
      reactive false
      searchEngine false
      serverPort 8080
      serviceDiscoveryType false
      skipClient false
      skipUserManagement false
      testFrameworks []
      websocket false
      withAdminUi true
      databaseType sql
      clientFramework react
      buildTool maven
      cacheProvider ehcache
      prodDatabaseType postgresql
  }
}

enum RideType {
  OFFER,
  REQUEST
}

enum UserRole {
  ADMIN,
  USER
}

enum UserStatus {
  ACTIVE,
  SUSPENDED
}

entity Ride {
  rideDateTime ZonedDateTime,
  rideCityFrom String,
  rideCityTo String,
  rideType RideType,
  rideComments TextBlob
}

entity City {
  cityName String
}

entity Users {
  userName String,
  userEmail String,
  userRole UserRole,
  userPhone String,
  userStatus UserStatus
}

relationship OneToOne {
  Ride{rideUser(userName)} to Users
}

relationship ManyToOne {
  Ride{rideCityFrom(cityName)} to City,
  Ride{rideCityTo(cityName)} to City
}

paginate Ride, City, Users with pagination

dto * with mapstruct

service * with serviceClass

filter *
