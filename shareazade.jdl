application {
  config {
      baseName shareazade
      applicationType monolith
      authenticationType jwt
      clientPackageManager npm
      clientTheme none
      devDatabaseType h2Disk
      dtoSuffix DTO
      enableGradleEnterprise false
      enableHibernateCache true
      enableSwaggerCodegen false
      enableTranslation true
      gradleEnterpriseHost ""
      jhiPrefix jhi
      jhipsterVersion "7.9.3"
      languages [en, it, fr, de]
      messageBroker false
      nativeLanguage en
      otherModules []
      packageName org.pierre.shareazade
      prodDatabaseType postgresql
      reactive false
      searchEngine false
      serverPort 8080
      serviceDiscoveryType false
      skipClient false
      skipUserManagement false
      testFrameworks []
      websocket false
      withAdminUi true
      databaseType sql
      clientFramework react
      buildTool maven
      cacheProvider ehcache
      prodDatabaseType postgresql
  }
    entities *
}

enum RideType {
  OFFER,
  REQUEST
}

enum UserRole {
  ADMIN,
  USER
}

enum UserStatus {
  ACTIVE,
  SUSPENDED
}

enum ShareCountry {
    CH,
    IT,
    FR,
    DE
}

entity ShareRide {
  rideDateTime ZonedDateTime,
  rideType RideType,
  rideComments TextBlob
}

entity ShareCity {
  cityName String,
    cityCountry ShareCountry
}

entity ShareUser {
  userName String,
  userEmail String,
  userRole UserRole,
  userPhone String,
  userStatus UserStatus
}

relationship ManyToOne {
  ShareRide{rideCityFrom(cityName)} to ShareCity,
  ShareRide{rideCityTo(cityName)} to ShareCity,
    ShareRide{rideUser(userName)} to ShareUser

}

paginate ShareRide, ShareCity, ShareUser with pagination

dto * with mapstruct

service * with serviceClass

filter *
